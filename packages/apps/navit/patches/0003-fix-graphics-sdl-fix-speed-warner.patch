From 1e2ea4b28def7abf8b3169ecc4a19b728352d8c7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Malte=20Schr=C3=B6der?= <maltesch@gmx.de>
Date: Sun, 26 Dec 2010 15:02:50 +0100
Subject: [PATCH 3/3] fix:graphics/sdl:fix speed warner

---
 navit/navit/graphics/sdl/graphics_sdl.c |   53 ++++++++++++++++++++----------
 1 files changed, 35 insertions(+), 18 deletions(-)

diff --git a/navit/navit/graphics/sdl/graphics_sdl.c b/navit/navit/graphics/sdl/graphics_sdl.c
index 15d5f0c..49812bd 100644
--- a/navit/navit/graphics/sdl/graphics_sdl.c
+++ b/navit/navit/graphics/sdl/graphics_sdl.c
@@ -495,6 +495,7 @@ get_text_bbox(struct graphics_priv *gr, struct graphics_font_priv *font, char *t
 	ret[3].y=-bbox.yMin;
 }
 
+
 static void
 draw_polygon(struct graphics_priv *gr, struct graphics_gc_priv *gc, struct point *p, int count)
 {
@@ -931,6 +932,28 @@ draw_lines(struct graphics_priv *gr, struct graphics_gc_priv *gc, struct point *
     }
 #endif
 }
+
+static void set_pixel(SDL_Surface *surface, int x, int y, Uint32 pixel)
+{
+  if(x<0 || y<0) {
+    return;
+  }
+    switch(surface->format->BytesPerPixel) {
+    	case 2: 
+		{
+    			Uint16 *target_pixel = (Uint16 *)((Uint8*)surface->pixels + y * surface->pitch + x * surface->format->BytesPerPixel);
+    			*target_pixel = (Uint16) pixel;
+		break;
+		}
+    	case 4:
+		{
+    			Uint32 *target_pixel = (Uint32 *)((Uint8*)surface->pixels + y * surface->pitch + x * surface->format->BytesPerPixel);
+    			*target_pixel = (Uint32) pixel;
+		break;
+		}
+    }
+}
+
 static void
 display_text_draw(struct font_freetype_text *text,
 		  struct graphics_priv *gr, struct graphics_gc_priv *fg,
@@ -979,7 +1002,6 @@ display_text_draw(struct font_freetype_text *text,
 	white.a = 0;
     }
 
-
     gp = text->glyph;
     i = text->glyph_count;
     x = p->x << 6;
@@ -1059,31 +1081,26 @@ display_text_draw(struct font_freetype_text *text,
 		    *(pGlyph + 2) = tmp;
 		    pGlyph += 4;
 		}
-		SDL_Surface *glyph_surface =
-		    SDL_CreateRGBSurfaceFrom(glyph, g->w, g->h, 32,
-		    				stride,
-					     	0x000000ff,0x0000ff00,0x00ff0000,0xff000000);
-		if (glyph_surface) {
-		    SDL_Rect r;
-		    r.x = (x + g->x) >> 6;
-		    r.y = (y + g->y) >> 6;
-		    r.w = g->w;
-		    r.h = g->h;
-
-		    SDL_BlitSurface(glyph_surface, NULL, gr->screen, &r);
-		    SDL_FreeSurface(glyph_surface);
-		}
 
 		int ii, jj;
+		pGlyph = glyph;
 		for (jj = 0; jj < g->h; ++jj) {
 		    for (ii = 0; ii < g->w; ++ii) {
 			int sx = (x + g->x) >> 6;
 			int sy = (y + g->y) >> 6;
 			sx = sx < 0 ? 0 : sx;
 			sy = sy < 0 ? 0 : sy;
-			int poff =
-			    gr->screen->w * ((jj) + sy) + ((ii) + sx);
-			poff *= gr->screen->format->BytesPerPixel;
+
+			if(*(pGlyph+0)>10 || *(pGlyph+1)>10 || *(pGlyph+2)>10 || *(pGlyph+3)>10) {
+                            set_pixel(gr->screen, ii+sx, jj+sy, 
+                                 SDL_MapRGBA(gr->screen->format,
+                                      *(pGlyph+0),
+                                      *(pGlyph+1),
+                                      *(pGlyph+2),
+                                      *(pGlyph+3)
+                                      ));
+                        }
+                        pGlyph += 4;
 		    }
 		}
 		g_free(glyph);
-- 
1.7.2.3

