From 16f06bdf9a916a87ce840b9d172bc3cb82d8d885 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Malte=20Schr=C3=B6der?= <maltesch@gmx.de>
Date: Sun, 6 Feb 2011 11:16:36 +0100
Subject: [PATCH 3/6] Patch:graphics/sdl:use g_alloca for temporary allocations|That's much cheaper than g_mallog + g_free

---
 navit/navit/graphics/sdl/graphics_sdl.c |    9 +++------
 1 files changed, 3 insertions(+), 6 deletions(-)

diff --git a/navit/navit/graphics/sdl/graphics_sdl.c b/navit/navit/graphics/sdl/graphics_sdl.c
index 75448c2..e6f199c 100644
--- a/navit/navit/graphics/sdl/graphics_sdl.c
+++ b/navit/navit/graphics/sdl/graphics_sdl.c
@@ -1022,7 +1022,7 @@ display_text_draw(struct font_freetype_text *text,
 	if (g->w && g->h && bg) {
 	    stride = (g->w + 2) * 4;
 	    if (color) {
-		shadow = g_malloc(stride * (g->h + 2));
+		shadow = g_alloca(stride * (g->h + 2));
 		gr->freetype_methods.get_shadow(g, shadow, 32, stride, &white, &transparent);
 
 		SDL_Surface *glyph_surface =
@@ -1040,7 +1040,6 @@ display_text_draw(struct font_freetype_text *text,
 		    SDL_BlitSurface(glyph_surface, NULL, gr->screen, &r);
 		    SDL_FreeSurface(glyph_surface);
 		}
-		g_free(shadow);
 	    }
 	}
 	x += g->dx;
@@ -1057,7 +1056,7 @@ display_text_draw(struct font_freetype_text *text,
 	    if (color) {
 		stride = g->w;
 		if (bg) {
-		    glyph = g_malloc(stride * g->h * 4);
+		    glyph = g_alloca(stride * g->h * 4);
 		    gr->freetype_methods.get_glyph(g, glyph, 32,
 						   stride * 4, &black,
 						   &white, &transparent);
@@ -1075,10 +1074,9 @@ display_text_draw(struct font_freetype_text *text,
 			SDL_BlitSurface(glyph_surface, NULL, gr->screen,&r);
 		        SDL_FreeSurface(glyph_surface);
 		    }
-		    g_free(glyph);
 		}
 		stride *= 4;
-		glyph = g_malloc(stride * g->h);
+		glyph = g_alloca(stride * g->h);
 		gr->freetype_methods.get_glyph(g, glyph, 32, stride,
 					       &black, &white,
 					       &transparent);
@@ -1103,7 +1101,6 @@ display_text_draw(struct font_freetype_text *text,
                         pGlyph += 4;
 		    }
 		}
-		g_free(glyph);
 	    }
 	}
 	x += g->dx;
-- 
1.7.2.3

