diff --git a/gst/typefind/gsttypefindfunctions.c b/gst/typefind/gsttypefindfunctions.c
index e13ad7f..3d3deba 100644
--- a/gst/typefind/gsttypefindfunctions.c
+++ b/gst/typefind/gsttypefindfunctions.c
@@ -2038,6 +2038,49 @@ qt_type_find (GstTypeFind * tf, gpointer unused)
 };
 
 #ifdef MIME_TYPE_SUPPORTED_FOR_PALM_DOT_FIVE
+/*** audio/x-vorbis ***/
+static GstStaticCaps vorbis_caps = GST_STATIC_CAPS ("audio/x-vorbis");
+
+#define VORBIS_CAPS (gst_static_caps_get(&vorbis_caps))
+static void
+vorbis_type_find (GstTypeFind * tf, gpointer private)
+{
+  guint8 *data = gst_type_find_peek (tf, 0, 30);
+
+  if (data) {
+    guint blocksize_0;
+    guint blocksize_1;
+
+    /* 1 byte packet type (identification=0x01)
+       6 byte string "vorbis"
+       4 byte vorbis version */
+    if (memcmp (data, "\001vorbis\000\000\000\000", 11) != 0)
+      return;
+    data += 11;
+    /* 1 byte channels must be != 0 */
+    if (data[0] == 0)
+      return;
+    data++;
+    /* 4 byte samplerate must be != 0 */
+    if (GST_READ_UINT32_LE (data) == 0)
+      return;
+    data += 16;
+    /* blocksize checks */
+    blocksize_0 = data[0] & 0x0F;
+    blocksize_1 = (data[0] & 0xF0) >> 4;
+    if (blocksize_0 > blocksize_1)
+      return;
+    if (blocksize_0 < 6 || blocksize_0 > 13)
+      return;
+    if (blocksize_1 < 6 || blocksize_1 > 13)
+      return;
+    data++;
+    /* framing bit */
+    if ((data[0] & 0x01) != 1)
+      return;
+    gst_type_find_suggest (tf, GST_TYPE_FIND_MAXIMUM, VORBIS_CAPS);
+  }
+}
 #else
 
 /*** image/x-quicktime ***/
@@ -3139,6 +3182,8 @@ plugin_init (GstPlugin * plugin)
       flac_type_find, flac_exts, FLAC_CAPS, NULL, NULL);
   TYPE_FIND_REGISTER (plugin, "application/ogg", GST_RANK_PRIMARY,
       ogganx_type_find, ogg_exts, OGGANX_CAPS, NULL, NULL);
+  TYPE_FIND_REGISTER (plugin, "audio/x-vorbis", GST_RANK_PRIMARY,
+      vorbis_type_find, NULL, VORBIS_CAPS, NULL, NULL);
 #else
 
   TYPE_FIND_REGISTER_START_WITH (plugin, "video/x-ms-asf", GST_RANK_SECONDARY,
