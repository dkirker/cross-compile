--- dmg2img.c.orig	2010-07-02 19:09:49.000000000 +0930
+++ dmg2img.c	2010-07-02 19:10:28.000000000 +0930
@@ -18,8 +18,8 @@
 #define _FILE_OFFSET_BITS 64
 #define VERSION "dmg2img v1.6.2 is derived from dmg2iso by vu1tur (to@vu1tur.eu.org)"
 #define USAGE "\
-Usage: dmg2img [-s] [-v] [-V] [-d] <input.dmg> [<output.img>]\n\
-or     dmg2img [-s] [-v] [-V] [-d] -i <input.dmg> -o <output.img>\n\n\
+Usage: dmg2img [-s] [-v] [-V] [-d] [-p <partition>] <input.dmg> [<output.img>]\n\
+or     dmg2img [-s] [-v] [-V] [-d] [-p <partition>] -i <input.dmg> -o <output.img>\n\n\
 Options: -s (silent) -v (verbose) -V (extremely verbose) -d (debug)"
 
 #include <stdio.h>
@@ -94,6 +94,8 @@
 	int i, err, partnum = 0, scb;
 	Bytef *tmp = NULL, *otmp = NULL, *dtmp = NULL;
 	char *input_file = NULL, *output_file = NULL;
+	int onepart = -1;
+	int outenable = 1;
 	char *plist = NULL;
 	char *blkx = NULL;
 	unsigned int blkx_size;
@@ -117,6 +119,10 @@
 			verbose = 3;
 		else if (!strcmp(argv[i], "-d"))
 			debug = 1;
+		else if (!strcmp(argv[i], "-p") && i < argc - 1) {
+		  	onepart = atoi(argv[++i]);
+			outenable = 0;
+		}
 		else if (!strcmp(argv[i], "-i") && i < argc - 1)
 			input_file = argv[++i];
 		else if (!strcmp(argv[i], "-o") && i < argc - 1)
@@ -331,6 +337,9 @@
 	in_offs = add_offs = in_offs_add = 0;
 
 	for (i = 0; i < partnum && in_offs < kolyblk.DataForkLength - kolyblk.DataForkOffset; i++) {
+	  if (i == onepart) {
+	    outenable = 1;
+	  }
 		if (verbose)
 			printf("opening partition %d ...           ", i);
 		if (verbose >= 3)
@@ -442,6 +451,7 @@
 							return 0;
 						}
 						to_write = CHUNKSIZE - z.avail_out;
+						if (outenable)
 						if (fwrite(otmp, 1, to_write, FOUT) != to_write || ferror(FOUT)) {
 							(void)inflateEnd(&z);
 							printf("ERROR: writing file %s \n", output_file);
@@ -491,6 +501,7 @@
 							return 0;
 						}
 						to_write = CHUNKSIZE - bz.avail_out;
+						if (outenable)
 						if (fwrite(otmp, 1, to_write, FOUT) != to_write || ferror(FOUT)) {
 							(void)BZ2_bzDecompressEnd(&bz);
 							printf("ERROR: writing file %s \n", output_file);
@@ -514,6 +525,7 @@
 					}
 					int bytes_written;
 					int read_from_input = adc_decompress(to_write, tmp, DECODEDSIZE, dtmp, &bytes_written);
+					if (outenable)
 					fwrite(dtmp, 1, bytes_written, FOUT);
 					to_read -= read_from_input;
 				}
@@ -530,6 +542,7 @@
 						printf("ERROR: reading file %s \n", input_file);
 						return 0;
 					}
+					if (outenable)
 					fwrite(tmp, 1, chunk, FOUT);
 					//copy
 						to_read -= chunk;
@@ -544,6 +557,7 @@
 						chunk = CHUNKSIZE;
 					else
 						chunk = to_write;
+					if (outenable)
 					fwrite(tmp, 1, chunk, FOUT);
 					to_write -= chunk;
 				}
